* {
  outline: none;
  box-sizing: border-box;
  -webkit-overflow-scrolling: touch;
}

*, *:before, *:after {
  box-sizing: border-box;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

main {
  display: block;
}

ol, ul, li {
  list-style: none;
}

a {
  color: inherit;
  text-decoration: none;
  cursor: pointer;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  border: none;
}

img {
  display: block;
}

button {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: none;
  cursor: pointer;
}

input {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

select {
  margin: 0;
  -webkit-margin: 0;
  border-radius: 0;
  -webkit-border-radius: 0;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  cursor: pointer;
}

textarea {
  resize: none;
  -webkit-appearance: none;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

strong {
  font-weight: bolder;
}

img {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.section-work__cover, .component-parallax {
  position: relative;
  overflow: hidden;
}
.section-work__cover picture, .component-parallax picture,
.section-work__cover img,
.component-parallax img,
.section-work__cover video,
.component-parallax video {
  position: absolute;
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: inherit;
}

.is-hidden.component-preloader {
  display: none;
  visibility: hidden;
  opacity: 0;
}

:root {
  --vw: 1vw;
  --vh: 1vh;
  --section-padding: clamp(5em, calc(21 * var(--vh)), 12em);
  --container-padding: clamp(2.5em, calc(8 * var(--vw)), 8em);
}

@media screen and (max-width: 1200px) {
  :root {
    --container-padding: 6vw;
    --section-padding: clamp(5em, calc(21 * var(--vh)), 7em);
  }
}
@media screen and (max-width: 720px) {
  :root {
    --section-padding: vh(12);
  }
}
@media screen and (max-width: 540px) {
  :root {
    --container-padding: clamp(1.51em, 4vw, 2.5em);
    --section-padding: max(2.5em, calc(12 * var(--vh)));
  }
}
/*
100 thin
200 extralight
300 light
400 normal
500 medium
600 semibold
700 bold
800 extrabold
900 black
*/
@font-face {
  font-family: "Neue Regular";
  src: url(neue-regular.woff2) format("woff2"), url(neue-regular.woff) format("woff"), url(neue-regular.ttf) format("tff"), url(neue-regular.eot) format("eot");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Neue Thin";
  src: url(neue-thin.woff2) format("woff2"), url(neue-thin.woff) format("woff"), url(neue-thin.ttf) format("tff"), url(neue-thin.eot) format("eot");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Rebond Extralight";
  src: url(rebond-extralight.woff2) format("woff2"), url(rebond-extralight.woff) format("woff"), url(rebond-extralight.ttf) format("tff"), url(rebond-extralight.eot) format("eot");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
html {
  position: relative;
  width: 100%;
  min-height: 100%;
  scroll-behavior: initial;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  position: relative;
  width: 100%;
  min-height: 100%;
  pointer-events: auto;
  -webkit-overflow-scrolling: touch;
  -webkit-font-smoothing: antialiased;
}

.app {
  width: calc(100 * var(--vw));
  min-height: calc(100 * var(--vh));
  font-family: "Neue Regular";
  font-size: 16px;
  font-size: clamp(16px, 1.2 * var(--vw), 19px);
  line-height: 1;
  background-color: #F5EDE2;
  color: #1C1B1A;
}
.app.is-dark {
  background-color: #1C1B1A;
  color: #F5EDE2;
}
.app.is-light {
  background-color: #F5EDE2;
  color: #1C1B1A;
}
.app::before {
  content: "xs";
  position: absolute;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}
@media screen and (min-width: 540px) {
  .app::before {
    content: "s";
  }
}
@media screen and (min-width: 720px) {
  .app::before {
    content: "m";
  }
}
@media screen and (min-width: 1200px) {
  .app::before {
    content: "l";
  }
}

.appOverlay {
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  background-color: #1C1B1A;
  position: absolute;
  z-index: 6;
}

.page {
  width: 100%;
  height: 100%;
  min-height: calc(100 * var(--vh));
  padding-top: 110px;
  position: relative;
  z-index: 1;
}
@media screen and (max-width: 540px) {
  .page {
    padding-top: 80px;
  }
}
.page-home {
  padding-top: 0;
}

* {
  font-kerning: none;
}

.line {
  overflow: hidden;
}

.word {
  display: inline-flex !important;
  overflow: hidden;
}

.ui-container, .component-footer-wrapper, .page-projects-grid, .page-projects-header {
  margin: 0 auto;
  padding-left: var(--container-padding);
  padding-right: var(--container-padding);
  max-width: 1600px;
}
.ui-container-large {
  padding-left: calc(var(--container-padding) * 0.35);
  padding-right: calc(var(--container-padding) * 0.35);
}
@media screen and (max-width: 1200px) {
  .ui-container, .component-footer-wrapper, .page-projects-grid, .page-projects-header, .ui-container-large {
    padding-left: var(--container-padding);
    padding-right: var(--container-padding);
  }
}

.ui-h1 {
  font-family: "Rebond Extralight";
  font-size: clamp(4.125rem, 11.11 * var(--vw), 11.11 * var(--vw));
  line-height: 0.94;
}

.ui-h2 {
  font-family: "Rebond Extralight";
  font-size: clamp(3.5rem, 9.7 * var(--vw), 8.75rem);
  line-height: 0.9;
}

.ui-h3 {
  font-family: "Rebond Extralight";
  font-size: clamp(3rem, 6 * var(--vw), 5rem);
  line-height: 0.92;
}

.ui-h4 {
  font-family: "Rebond Extralight";
  font-size: calc(clamp(3.25em, 7 * var(--vw), 8em) * 0.83);
  line-height: 0.937;
}
@media screen and (max-width: 720px) {
  .ui-h4 {
    font-size: calc(clamp(3.25em, 7 * var(--vw), 8em) * 0.92);
  }
}

.ui-h5 {
  font-family: "Rebond Extralight";
  font-size: min(64px, max(40px, calc(10.2564102564 * var(--vw))));
  line-height: 1;
}
@media screen and (max-width: 720px) {
  .ui-h5 {
    line-height: 3rem;
  }
}

.ui-h6 {
  font-family: "Rebond Extralight";
  font-size: clamp(2rem, 3 * var(--vw), 2.5rem);
  line-height: 1.2;
}

.ui-h7 {
  font-family: "Rebond Extralight";
  font-size: min(40px, max(22px, calc(5.641025641 * var(--vw))));
  line-height: 1.05;
}
@media (max-width: 720px) {
  .ui-h7 {
    font-size: min(40px, max(22px, calc(3.3333333333 * var(--vw))));
    line-height: 0.95;
  }
}

.ui-h8 {
  font-family: "Rebond Extralight";
  font-size: clamp(1.1rem, 8 * var(--vw), 2rem);
  line-height: 1;
}

.ui-h9, .page-ui-sectionTitle {
  font-family: "Rebond Extralight";
  font-size: clamp(1.5rem, 7 * var(--vw), 2rem);
  line-height: 1;
}

.ui-p-xl {
  font-size: clamp(1rem, 1.7 * var(--vw), 1.125rem);
  line-height: 1;
}

.ui-p-l {
  font-size: clamp(1rem, 1.7 * var(--vw), 1.125rem);
  line-height: 1.4;
}
@media screen and (max-width: 720px) {
  .ui-p-l {
    line-height: 1.6;
  }
}

.ui-p-m {
  font-size: calc(clamp(5.5em, 7 * var(--vw), 8em) * 0.159);
  line-height: 1.67;
}
@media screen and (max-width: 720px) {
  .ui-p-m {
    font-size: calc(clamp(6.3em, 7 * var(--vw), 8em) * 0.159);
  }
}

.ui-p-s {
  font-size: 0.75rem;
  line-height: 1.4;
}

.ui-p-xs {
  font-size: 12px;
  line-height: 1.22;
}

.ui-p-xxs {
  font-size: 12px;
  line-height: 1.43;
}

.ui-spotLink {
  display: inline-flex;
  gap: 4px;
  justify-content: center;
  align-items: center;
  white-space: pre;
  cursor: pointer;
  position: relative;
  z-index: 1;
}
@media (any-hover: hover) {
  .ui-spotLink:not([disabled]):hover::before {
    transform: scale(1);
  }
}
.ui-spotLink::before {
  content: "";
  position: absolute;
  width: 96px;
  height: 96px;
  background: url(spot-brown.png) no-repeat;
  background-size: contain;
  transform: scale(0);
  transition: transform 0.65s cubic-bezier(0.34, 1.56, 0.64, 1);
  z-index: -1;
}
.ui-spotLink-text {
  margin-top: 3px;
  line-height: 1;
}
.ui-spotLink-icon {
  display: none;
  transform: rotate(-45deg);
}
@media screen and (max-width: 1200px) {
  .ui-spotLink-icon {
    display: inline;
  }
}

.ui-underlineLink {
  position: relative;
  padding-bottom: 0.375rem;
  white-space: pre;
  cursor: pointer;
}
.ui-underlineLink:hover::before {
  transform: scaleX(1);
}
.ui-underlineLink:hover::after {
  transform: scaleX(0);
}
.ui-underlineLink::before, .ui-underlineLink::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: #1C1B1A;
  transition: 0.8s;
  transition-timing-function: cubic-bezier(0, 0.89, 0.41, 1);
}
.ui-underlineLink::before {
  left: 0;
  transform-origin: left;
  transform: scaleX(0);
  transition-delay: 0.2s;
}
.ui-underlineLink::after {
  right: 0;
  transform-origin: right;
}

.ui-cursorTextLink {
  cursor: pointer;
  position: relative;
  z-index: 1;
}

.ui-wordMask {
  position: relative;
  overflow: hidden;
}
.ui-wordMask > span {
  display: block;
}
.ui-wordMask > span:nth-child(2) {
  position: absolute;
  top: 100%;
  left: 0;
}

.ui-hyperlink {
  text-decoration: underline;
  text-decoration-thickness: 1px;
  text-underline-offset: 0.4rem;
}

@media screen and (max-width: 720px) {
  .page-about {
    display: flex;
    flex-direction: column;
  }
}
.page-about-content {
  padding-top: 3rem;
}
@media screen and (max-width: 720px) {
  .page-about-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
}
.page-about-title {
  position: relative;
  max-width: 620px;
  font-family: "Rebond Extralight";
  font-size: clamp(3rem, 5 * var(--vw), 4.5rem);
  line-height: 0.9;
}
.page-about-scribble .component-svgReveal {
  position: absolute;
  top: 0;
  left: 0;
}
.page-about-description {
  max-width: 470px;
  font-size: 1rem;
  line-height: 1.67;
  margin-top: 48px;
}
@media screen and (max-width: 720px) {
  .page-about .component-contactMe {
    margin: auto auto 0 auto;
    padding-bottom: 2.8rem;
  }
}

.page-ui-section {
  padding: 64px 0;
}
.page-ui-sectionTitle {
  margin-bottom: 32px;
}
.page-ui-colors {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 24px 4%;
}
.page-ui-colorsItem {
  padding-bottom: 100%;
}
.page-ui-colorsItem.is-black {
  background-color: #1C1B1A;
}
.page-ui-colorsItem.is-dark-black {
  background-color: #141313;
}
.page-ui-colorsItem.is-grey {
  background-color: #ABB0B4;
}
.page-ui-colorsItem.is-white {
  background-color: #FFFFFF;
}
.page-ui-colorsItem.is-brown {
  background-color: #DACAB5;
}
.page-ui-colorsItem.is-beige-light {
  background-color: #F9F4ED;
}
.page-ui-colorsItem.is-blue-light {
  background-color: #CCDCF7;
}
.page-ui-colorsItem.is-blue {
  background-color: #4185F4;
}
.page-ui-colorsItem.is-green {
  background-color: #E6FFF5;
}
.page-ui-colorsItem.is-pink {
  background-color: #F5DADA;
}
.page-ui-colorsItem.is-orange {
  background-color: #FF6C3C;
}
.page-ui-cursor {
  display: flex;
  justify-content: space-between;
}
.page-ui-cursorLink {
  width: 100px;
  height: 30px;
  background-color: #DACAB5;
}
.page-ui-cursorSlider {
  width: 100px;
  height: 30px;
  background-color: #CCDCF7;
}
.page-ui-textLinks {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;
  gap: 8px;
}
.page-ui-parallaxImage {
  display: inline-block;
  width: 500px;
  height: 300px;
}
.page-ui-cards {
  display: flex;
  flex-wrap: wrap;
  gap: 48px;
}

.page-home {
  background-color: #1C1B1A;
}
.page-home-works {
  overflow: hidden;
}
.page-home-projectsButton {
  display: flex;
  justify-content: center;
  padding-top: calc(var(--section-padding) * 0.2);
  padding-bottom: calc(var(--section-padding) * 0.2);
}
@media screen and (max-width: 720px) {
  .page-home-projectsButton {
    padding-top: calc(var(--section-padding) * 0.6);
    padding-bottom: calc(var(--section-padding) * 0.6);
  }
}

.page-projects {
  background-color: #F5EDE2;
}
.page-projects-header {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding-top: calc(var(--section-padding) * 1.21);
  padding-bottom: calc(var(--section-padding) * 0.75);
}
@media screen and (max-width: 720px) {
  .page-projects-header {
    padding-top: calc(var(--section-padding) * 1.84);
    padding-bottom: calc(var(--section-padding) * 0.75);
  }
}
.page-projects-title {
  letter-spacing: -3px;
}
.page-projects-paragraph {
  max-width: 540px;
  margin-top: 32px;
}
.page-projects-gridRow {
  display: flex;
  flex-wrap: wrap;
  gap: 3.3%;
  padding-bottom: calc(var(--section-padding) * 0.82);
}
@media screen and (max-width: 720px) {
  .page-projects-gridRow {
    gap: calc(var(--section-padding) * 0.5);
    padding-bottom: calc(var(--section-padding) * 0.5);
  }
}
.page-projects-gridRow:nth-of-type(3n+1) {
  justify-content: flex-end;
}
.page-projects-gridRow:nth-of-type(3n+2) {
  justify-content: flex-start;
}
.page-projects-gridRow:nth-of-type(3n+3) {
  justify-content: space-between;
}

.page-project-divider {
  width: 1px;
  height: min(32vh, 235px);
  margin: 2.875rem auto 1.5rem auto;
  background-color: #1C1B1A;
}
.page-project-sliderSection {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  padding-top: calc(var(--section-padding) * 0.7);
  padding-bottom: calc(var(--section-padding) * 0.7);
}
@media screen and (max-width: 720px) {
  .page-project-sliderSection {
    padding-top: calc(var(--section-padding) * 0.15);
    padding-bottom: calc(var(--section-padding) * 0.15);
  }
}
.page-project-sliderSection-figure {
  position: absolute;
  left: -35%;
  width: 100%;
  height: auto;
  z-index: -1;
}
@media screen and (max-width: 720px) {
  .page-project-sliderSection-figure {
    width: 110%;
    top: -60%;
  }
}

.component-circledButton {
  position: relative;
  min-height: 152px;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
@media (any-hover: hover) {
  .component-circledButton:not([disabled]):hover .component-circledButton-text {
    transform: translateX(28px);
    transition-delay: 0.1s;
  }
  .component-circledButton:not([disabled]):hover .component-circledButton-arrow:nth-of-type(1) {
    transform: translateX(84px);
    transition-delay: 0.2s;
  }
  .component-circledButton:not([disabled]):hover .component-circledButton-arrow:nth-of-type(2) {
    transform: translateX(100px);
    transition-delay: 0s;
  }
  .component-circledButton:not([disabled]):hover .component-circledButton-circle {
    transform: rotate(3deg) scaleX(0.97);
  }
  .component-circledButton:not([disabled]):hover .component-circledButton-circle:nth-of-type(2) {
    transform: rotate(-2deg) scaleX(0.97);
  }
}
.component-circledButton-content {
  position: relative;
  width: 316px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.8rem;
  overflow: hidden;
}
.component-circledButton-text {
  font-size: clamp(0.875rem, 4 * var(--vw), 1rem);
  color: #DACAB5;
  text-transform: uppercase;
  transition: transform 1s cubic-bezier(0.11, 0.9, 0.09, 1);
}
.component-circledButton-arrow {
  transition: transform 1s cubic-bezier(0.11, 0.9, 0.09, 1);
}
.component-circledButton-arrow:nth-of-type(1) {
  position: absolute;
  right: 100%;
  transform: translateX(-16px);
}
.component-circledButton-arrow:nth-of-type(2) {
  transition-delay: 0.12s;
}
.component-circledButton-circle {
  position: absolute;
  transition: transform 1s cubic-bezier(0.11, 0.9, 0.09, 1);
  padding: 0 12px;
}
.component-circledButton-circle:nth-of-type(2) {
  transform: rotate(4deg);
}
.component-circledButton-circle path {
  stroke: #686158;
}

.component-contactMe {
  pointer-events: none;
}
.component-contactMe-content {
  position: fixed;
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-end;
  padding: 4rem 7.6rem;
  clip-path: circle(0 at 90% 81%);
  background-color: #FF6C3C;
  pointer-events: auto;
}
@media screen and (max-width: 720px) {
  .component-contactMe-content {
    padding: 1.7rem 1.7rem;
  }
}
.component-contactMe-mail {
  display: block;
  font-family: "Rebond Extralight";
  font-size: clamp(1.375rem, 3 * var(--vw), 2.5rem);
  line-height: 1.31;
}
.component-contactMe-mailMask {
  overflow: hidden;
}
.component-contactMe-social {
  display: flex;
  gap: 70px;
  margin-top: 6rem;
}
@media screen and (max-width: 720px) {
  .component-contactMe-social {
    margin-top: 5rem;
  }
}
.component-contactMe-socialItem {
  overflow: hidden;
}
.component-contactMe-socialLink {
  position: relative;
  display: block;
  text-transform: uppercase;
  padding-bottom: 4px;
}
.component-contactMe-socialLinkBar {
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 1px;
  background-color: #FFFFFF;
  transform-origin: left;
  transform: scaleX(0);
}
.component-contactMe-button {
  position: absolute;
  right: 4.5rem;
  bottom: 4.5rem;
  width: 8rem;
  height: 8rem;
  display: flex;
  justify-content: center;
  align-items: center;
  background-image: url(spot-orange.png);
  background-repeat: no-repeat;
  background-size: cover;
  font-family: "Neue Thin";
  font-size: 1.25rem;
  line-height: 0.85;
  color: #FFFFFF;
  pointer-events: all;
}
@media screen and (max-width: 720px) {
  .component-contactMe-button {
    position: static;
  }
}

.component-cursor {
  --translateX: 0px;
  --translateY: 0px;
  --skewX: 0deg;
  --skewY: 0deg;
  position: fixed;
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  pointer-events: none;
  position: fixed;
  z-index: 5;
}
.component-cursor.is-down.on-slider .component-cursor-backgroundContainer {
  transform: scale(0.8);
}
.component-cursor.is-down.on-slider .component-cursor-contentContainer {
  transform: scaleX(1.1);
}
.component-cursor.is-down.on-link .component-cursor-backgroundContainer {
  transform: scale(0.8);
}
.component-cursor.is-down.on-link .component-cursor-contentContainer {
  transform: scaleX(1.2) translate3d(-5px, -5px, 0) rotate(15deg);
}
.component-cursor.is-white .component-cursor-background {
  background-image: url(spot-white.png);
}
.component-cursor.is-white .component-cursor-arrow svg path {
  stroke: #141313;
}
.component-cursor.is-brown .component-cursor-background {
  background-image: url(spot-brown.png);
}
.component-cursor.on-link .component-cursor-inner {
  opacity: 1;
  transform: scale(1) rotate(-40deg);
}
.component-cursor.on-slider .component-cursor-inner {
  opacity: 1;
  transform: scale(1) rotate(0deg);
}
.component-cursor.on-slider .component-cursor-background {
  transform: scale(1.2);
}
.component-cursor.on-slider .component-cursor-arrow.is-left {
  opacity: 1;
  transform: translate3d(-40%, 0, 0);
}
.component-cursor.on-slider .component-cursor-arrow.is-right {
  transform: translate3d(40%, 0, 0);
}
.component-cursor-wrapper {
  display: inline-block;
  transform: translate3d(calc(var(--translateX) - 50%), calc(var(--translateY) - 50%), 0) skewX(var(--skewX)) skewY(var(--skewX));
  transition: transform cubic-bezier(0.11, 0.9, 0.09, 1) 0.8s;
}
.component-cursor-inner {
  position: relative;
  width: 112px;
  height: 112px;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  transform: scale(0);
  transition: transform 0.7s cubic-bezier(0.11, 0.9, 0.09, 1), opacity 0.15s linear;
}
.component-cursor-backgroundContainer {
  position: absolute;
  width: 100%;
  height: 100%;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.component-cursor-background {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(spot-orange.png);
  background-size: contain;
  background-repeat: no-repeat;
  transition: transform 0.4s cubic-bezier(0.18, 0.64, 0.21, 0.97);
}
.component-cursor-contentContainer {
  position: absolute;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
  transform-origin: left bottom;
}
.component-cursor-content {
  display: flex;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.component-cursor-arrow {
  width: 23px;
  height: 21px;
  transition: 1s cubic-bezier(0.06, 0.645, 0, 0.985);
  transition-property: opacity, transform;
}
.component-cursor-arrow.is-left {
  opacity: 0;
  transform: translate3d(50%, 0, 0);
}
.component-cursor-arrow.is-right {
  transform: translate3d(-50%, 0, 0);
}
.component-cursor-arrow svg path {
  stroke: #FFFFFF;
  transition: stroke 0.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}

.component-footer {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #1C1B1A;
  overflow: hidden;
  background: transparent;
}
.component-footer-mask {
  width: 100%;
  height: 100%;
  background-color: #F9F4ED;
  will-change: clip-path;
}
.component-footer-wrapper {
  width: 100%;
  padding-top: calc(var(--section-padding) * 0.6);
}
.component-footer-top {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}
@media screen and (max-width: 1200px) {
  .component-footer-top {
    display: block;
  }
}
@media screen and (max-width: 720px) {
  .component-footer-text {
    padding-bottom: 2.625rem;
  }
}
.component-footer-title {
  letter-spacing: -2px;
  max-width: 400px;
  margin-bottom: 24px;
}
.component-footer-paragraph {
  max-width: 320px;
}
.component-footer-divider {
  width: 100%;
  height: 1px;
  background-color: #1C1B1A;
  margin-top: 12.688rem;
}
@media screen and (max-width: 720px) {
  .component-footer-divider {
    margin-top: 7rem;
  }
}
.component-footer-bottom {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 3.5rem 0;
}
@media screen and (max-width: 720px) {
  .component-footer-bottom {
    flex-direction: column;
    align-items: flex-end;
    padding: 1.5rem 0;
  }
}
.component-footer-social-list {
  display: flex;
  justify-content: space-between;
  gap: 40px;
}
@media screen and (max-width: 720px) {
  .component-footer-social-list {
    width: 100%;
  }
}
.component-footer-social-link {
  text-transform: uppercase;
}
.component-footer-signature {
  position: relative;
  display: flex;
  align-items: center;
}
@media screen and (max-width: 720px) {
  .component-footer-signature {
    margin-top: 60px;
  }
}
.component-footer-signature-link {
  font-family: "Rebond Extralight";
  position: relative;
  z-index: 3;
}
.component-footer-signature-figure {
  position: absolute;
  left: -68px;
  transform: rotate(19deg);
}
@media screen and (max-width: 720px) {
  .component-footer-signature-figure {
    left: -31px;
    transform: rotate(13deg);
  }
}
.component-footer-signature-figure .component-svgReveal svg {
  width: 82px;
}
@media screen and (max-width: 720px) {
  .component-footer-signature-figure .component-svgReveal svg {
    width: 37px;
  }
}

.app.is-dark .component-navigation-entryFigure path {
  stroke: #F5EDE2;
}
.app.is-dark .component-navigation-entry {
  color: #F5EDE2;
}
.app.is-dark .component-navigation-entry path {
  stroke: #F5EDE2;
}

.component-navigation {
  top: 0;
  left: 0;
  width: 100%;
  pointer-events: none;
  position: fixed;
  z-index: 2;
}
.component-navigation-container {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding-top: 2.125rem;
}
@media screen and (max-width: 720px) {
  .component-navigation-container {
    align-items: center;
  }
}
.component-navigation-entryFigure {
  width: 58px;
}
@media screen and (max-width: 720px) {
  .component-navigation-entryFigure {
    width: 48px;
  }
}
.component-navigation-entryFigure path {
  stroke: #1C1B1A;
}
.component-navigation-entries {
  display: flex;
  align-items: center;
  gap: 40px;
}
@media screen and (max-width: 720px) {
  .component-navigation-entries {
    gap: 24px;
  }
}
.component-navigation-entry {
  display: block;
  color: #1C1B1A;
  text-transform: uppercase;
  pointer-events: auto;
}
.component-navigation-entry path {
  stroke: #1C1B1A;
}

.component-preloader {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: fixed;
  z-index: 4;
}
.component-preloader-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #1C1B1A;
}
.component-preloader-wrapper.is-blackDark {
  background-color: #141313;
}
.component-preloader-logo {
  display: flex;
  justify-content: center;
  align-items: center;
}
.component-preloader-logoFrame {
  position: absolute;
  width: 15%;
  height: auto;
}
@media screen and (max-width: 720px) {
  .component-preloader-logoFrame {
    width: 40%;
  }
}
.component-preloader-name {
  position: absolute;
  display: flex;
  align-items: center;
}
.component-preloader-nameWord {
  color: #DACAB5;
  text-transform: uppercase;
}
.component-preloader-nameCarret {
  position: absolute;
  top: 0;
  right: -6px;
  width: 2px;
  height: 85%;
  background-color: #DACAB5;
  animation: flash 0.75s infinite reverse;
}
.component-preloader-scribble {
  position: absolute;
  width: 65%;
}
.component-preloader-scribble svg {
  width: 100%;
}
.component-preloader-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@keyframes flash {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  51% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}
.component-scribbleLink {
  position: relative;
  display: inline-flex;
  justify-content: center;
  white-space: pre;
}
.component-scribbleLink-scribble {
  position: absolute;
  top: 90%;
  width: 110%;
  visibility: hidden;
}

.component-svgReveal svg {
  width: 100%;
  height: 100%;
}

.component-parallax {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.component-workCard {
  display: inline-block;
}
.component-workCard.is-horizontal {
  width: min(507px, 46.7%);
}
.component-workCard.is-horizontal .component-workCard-cover {
  padding-bottom: 79%;
}
.component-workCard.is-square {
  width: min(548px, 46.7%);
}
.component-workCard.is-square .component-workCard-cover {
  padding-bottom: 98.3%;
}
.component-workCard.is-vertical {
  width: min(568px, 46.7%);
}
.component-workCard.is-vertical .component-workCard-cover {
  padding-bottom: 125%;
}
@media screen and (max-width: 720px) {
  .component-workCard.is-horizontal, .component-workCard.is-vertical, .component-workCard.is-square {
    width: 100%;
  }
  .component-workCard.is-horizontal .component-workCard-cover, .component-workCard.is-vertical .component-workCard-cover, .component-workCard.is-square .component-workCard-cover {
    padding-bottom: 64%;
  }
}
@media screen and (max-width: 540px) {
  .component-workCard.is-horizontal .component-workCard-cover, .component-workCard.is-vertical .component-workCard-cover, .component-workCard.is-square .component-workCard-cover {
    padding-bottom: 98.2%;
  }
}
.component-workCard.is-hidden {
  pointer-events: none;
  transition-duration: 0s;
  transition-delay: 0s;
}
.component-workCard.is-hidden * {
  pointer-events: none;
  transition-duration: 0s;
  transition-delay: 0s;
}
.component-workCard.is-hidden .component-workCard-cover {
  clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
}
.component-workCard.is-hidden .component-workCard-coverImage {
  transform: scale(1.2) translate3d(0, 100px, 0);
}
.component-workCard.is-hidden .component-workCard-content {
  transform: rotate(8deg);
}
.component-workCard.is-hidden .component-workCard-nameInner {
  transform: translate3d(0, 100%, 0) scaleY(2);
}
.component-workCard.is-hidden .component-workCard-separator {
  transform: scaleX(0);
}
.component-workCard.is-hidden .component-workCard-excerpt, .component-workCard.is-hidden .component-workCard-date {
  opacity: 0;
  transform: translate3d(0, 16px, 0);
}
@media (any-hover: hover) {
  .component-workCard:not([disabled]):hover {
    transition-delay: 0s !important;
  }
  .component-workCard:not([disabled]):hover * {
    transition-delay: 0s !important;
  }
  .component-workCard:not([disabled]):hover .component-workCard-coverInner {
    transform: scale(1.1);
  }
}
.component-workCard-wrapper {
  display: inline-block;
  width: 100%;
}
.component-workCard-cover {
  position: relative;
  width: 100%;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  transition: width 0.7s cubic-bezier(0.06, 0.645, 0, 0.985), clip-path 1.1s cubic-bezier(0.22, 1, 0.36, 1);
}
.component-workCard-coverInner {
  position: absolute;
  width: 100%;
  height: 100%;
  transition: transform 1.6s cubic-bezier(0.06, 0.645, 0, 0.985);
  will-change: transform;
}
.component-workCard-content {
  padding-top: 2.5rem;
  transform-origin: left;
  transition: transform 2s cubic-bezier(0.09, 0.94, 0, 0.99);
}
@media screen and (max-width: 720px) {
  .component-workCard-content {
    padding-top: 1.5rem;
  }
}
.component-workCard-nameInner {
  transform-origin: top;
  transition: transform 1.4s cubic-bezier(0.06, 0.645, 0, 0.985);
  transition-delay: 0.4s;
}
.component-workCard-separator {
  width: 100%;
  height: 1px;
  background-color: #1C1B1A;
  margin: 1.5rem 0;
  transform-origin: left;
  transition: transform 1.4s cubic-bezier(0.06, 0.645, 0, 0.985);
  transition-delay: 0.7s;
}
@media screen and (max-width: 720px) {
  .component-workCard-separator {
    margin: 0.888rem 0;
  }
}
.component-workCard-details {
  display: flex;
  justify-content: space-between;
}
.component-workCard-excerpt {
  transition: 1.7s cubic-bezier(0.13, 0.85, 0.33, 0.99);
  transition-property: transform, opacity;
  transition-delay: 0.8s;
}
.component-workCard-date {
  transition: 2.2s cubic-bezier(0.13, 0.85, 0.33, 0.99);
  transition-property: transform, opacity;
  transition-delay: 0.8s;
}

.section-work {
  display: flex;
  justify-content: flex-start;
  margin-top: calc(var(--section-padding) * 0.8);
  margin-bottom: calc(var(--section-padding) * 0.8);
  position: relative;
  z-index: 2;
}
@media screen and (max-width: 720px) {
  .section-work {
    margin-top: calc(var(--section-padding) * 0.4);
    margin-bottom: calc(var(--section-padding) * 0.4);
  }
}
.section-work.is-visible .section-work__cover {
  clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
}
.section-work.is-visible .section-work__cover-overlay {
  clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
}
@media (any-hover: hover) {
  .section-work.is-visible .section-work__link:not([disabled]):hover .section-work__cover {
    transform: scale(0.95);
  }
  .section-work.is-visible .section-work__link:not([disabled]):hover .section-work__cover-inner .component-parallax {
    transform: scale(1.1);
  }
}
.section-work.is-alignCenter {
  margin-left: auto;
  margin-right: auto;
}
.section-work.is-horizontal, .section-work.is-square {
  width: calc(51 * var(--vw));
}
@media screen and (max-width: 1200px) {
  .section-work.is-horizontal, .section-work.is-square {
    width: calc(64 * var(--vw));
  }
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal, .section-work.is-square {
    width: 100%;
  }
}
.section-work.is-horizontal .section-work__cover, .section-work.is-square .section-work__cover {
  padding-bottom: 61%;
}
.section-work.is-horizontal .section-work__tags, .section-work.is-square .section-work__tags {
  margin: 24px 0 0 54%;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal .section-work__tags, .section-work.is-square .section-work__tags {
    margin: 12px 0 0 0;
  }
}
.section-work.is-vertical {
  width: calc(26.6 * var(--vw));
}
@media screen and (max-width: 1200px) {
  .section-work.is-vertical {
    width: calc(32 * var(--vw));
  }
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical {
    width: 100%;
  }
}
.section-work.is-vertical .section-work__cover {
  padding-bottom: 141%;
}
.section-work.is-vertical .section-work__scribble {
  width: 50%;
  top: 87%;
  left: -27%;
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical .section-work__scribble {
    width: 35%;
    top: 62%;
    right: -5%;
    left: unset;
  }
}
.section-work.is-vertical .section-work__text {
  min-width: 130%;
  left: 92%;
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical .section-work__text {
    min-width: unset;
  }
}
.section-work.is-vertical .section-work__tags {
  margin: 24px 0 0 12%;
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical .section-work__tags {
    margin: 12px 0 0 0;
  }
}
.section-work.is-vertical.is-alignCenter {
  width: calc(30 * var(--vw));
  padding-right: calc(1 * var(--vw));
}
@media screen and (max-width: 1200px) {
  .section-work.is-vertical.is-alignCenter {
    width: calc(36 * var(--vw));
    padding-right: calc(3 * var(--vw));
  }
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical.is-alignCenter {
    width: 100%;
    padding-right: 0;
  }
}
.section-work.is-vertical.is-alignLeft {
  margin-left: 8rem;
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical.is-alignLeft {
    margin-left: 0;
  }
}
.section-work.is-horizontal.is-alignLeft .section-work__scribble, .section-work.is-square.is-alignLeft .section-work__scribble {
  width: 13%;
  top: 93%;
  left: 4%;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignLeft .section-work__scribble, .section-work.is-square.is-alignLeft .section-work__scribble {
    width: 11%;
    top: -10%;
    left: 3%;
  }
}
.section-work.is-horizontal.is-alignLeft .section-work__text, .section-work.is-square.is-alignLeft .section-work__text {
  left: 97%;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignLeft .section-work__text, .section-work.is-square.is-alignLeft .section-work__text {
    left: unset;
  }
}
.section-work.is-horizontal.is-alignCenter .section-work__scribble, .section-work.is-square.is-alignCenter .section-work__scribble {
  width: 30%;
  top: -10%;
  left: 90%;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignCenter .section-work__scribble, .section-work.is-square.is-alignCenter .section-work__scribble {
    width: 26%;
    top: -6%;
    left: unset;
    right: 0;
  }
}
.section-work.is-horizontal.is-alignCenter .section-work__text, .section-work.is-square.is-alignCenter .section-work__text {
  left: -25%;
}
.section-work.is-horizontal.is-alignCenter .section-work__header, .section-work.is-square.is-alignCenter .section-work__header {
  flex-direction: row-reverse;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignCenter .section-work__header, .section-work.is-square.is-alignCenter .section-work__header {
    flex-direction: row;
  }
}
.section-work.is-horizontal.is-alignCenter .section-work__index, .section-work.is-square.is-alignCenter .section-work__index {
  margin: 4px 16px 0 0;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignCenter .section-work__index, .section-work.is-square.is-alignCenter .section-work__index {
    margin: 10px 0 0 12px;
  }
}
.section-work.is-beige__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #F5EDE2;
}
.section-work.is-lightblue .section-work__cover-overlay {
  background-color: #CCDCF7;
}
.section-work.is-blue__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #4185F4;
}
.section-work.is-green__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #E6FFF5;
}
.section-work.is-pink__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #F5DADA;
}
.section-work.is-orange__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #FF6C3C;
}
.section-work__container {
  width: 100%;
  position: relative;
}
.section-work__link {
  width: 100%;
  display: flex;
  align-items: center;
}
@media screen and (max-width: 720px) {
  .section-work__link {
    flex-direction: column;
  }
}
.section-work__cover {
  position: relative;
  width: 100%;
  clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
  transition: clip-path 0.7s cubic-bezier(0.06, 0.645, 0, 0.985), transform 0.9s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.section-work__cover-inner {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  transition: transform 1.8s cubic-bezier(0.06, 0.645, 0, 0.985) 0.4s;
}
.section-work__cover-inner .component-parallax {
  transition: transform 0.9s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.section-work__cover-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
  transition: clip-path 1.4s cubic-bezier(0.06, 0.645, 0, 0.985) 0.4s;
}
.section-work__text {
  position: absolute;
  z-index: 2;
}
@media screen and (max-width: 720px) {
  .section-work__text {
    position: unset;
    width: 100%;
    margin-top: 16px;
  }
}
.section-work__header {
  position: relative;
  max-width: calc(32 * var(--vw));
}
@media screen and (max-width: 720px) {
  .section-work__header {
    max-width: unset;
  }
}
.section-work__name {
  display: inline;
  color: #F5EDE2;
  text-transform: lowercase;
}
.section-work__index {
  position: absolute;
  font-family: "Rebond Extralight";
  color: #F5EDE2;
  margin: 10px 0 0 10px;
  overflow: hidden;
}
.section-work__tags {
  display: flex;
  flex-direction: column;
  gap: 4px;
  margin: 24px 0 0 40%;
}
@media screen and (max-width: 720px) {
  .section-work__tags {
    flex-direction: row;
    gap: 16px;
  }
}
.section-work__tag-item {
  font-family: "Neue Regular";
  color: #F5EDE2;
  text-transform: uppercase;
  overflow: hidden;
}
.section-work__scribble {
  position: absolute;
}
.section-work__scribble svg path {
  stroke-width: 3px;
}
@media (max-width: 720px) {
  .section-work__scribble svg path {
    stroke-width: 4px;
  }
}

.section-horizontalTextImage {
  padding-top: calc(var(--section-padding) * 0.7);
  padding-bottom: calc(var(--section-padding) * 0.7);
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage {
    padding-top: calc(var(--section-padding) * 0.54);
    padding-bottom: calc(var(--section-padding) * 0.84);
  }
}
.section-horizontalTextImage.is-reverse .section-horizontalTextImage-container {
  flex-direction: row-reverse;
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage.is-reverse .section-horizontalTextImage-container {
    flex-direction: column;
  }
}
.section-horizontalTextImage-container {
  display: flex;
  justify-content: space-between;
  gap: calc(10 * var(--vw));
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage-container {
    flex-direction: column;
  }
}
.section-horizontalTextImage-text {
  max-width: 410px;
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage-text {
    max-width: 100%;
  }
}
.section-horizontalTextImage-title {
  margin-bottom: 1rem;
}
.section-horizontalTextImage-wysiwyg {
  flex-basis: 50%;
  font-size: 1rem;
  line-height: 1.63;
}
.section-horizontalTextImage-wysiwyg .line {
  overflow: visible;
}
.section-horizontalTextImage-imageContainer {
  width: 100%;
}
.section-horizontalTextImage-image {
  position: relative;
  width: 100%;
  max-width: 652px;
  height: 0;
  padding-bottom: 61.2%;
}

.section-slider {
  width: 100%;
  overflow: hidden;
}
.section-slider-container {
  width: 100%;
  display: inline-flex;
  justify-content: left;
  align-items: center;
  cursor: grab;
  overflow: visible;
}
.section-slider-wrapper {
  flex-shrink: 0;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.section-slider-slide {
  flex-shrink: 0;
  display: inline-block;
  margin: 0 12px;
  overflow: hidden;
}
.section-slider-slide img {
  max-width: calc(60 * var(--vw));
  max-height: calc(60 * var(--vh));
  width: auto;
  height: auto;
}
@media screen and (max-width: 720px) {
  .section-slider-slide img {
    max-width: calc(80 * var(--vw));
  }
}
.section-slider-slideImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.section-homeHeader {
  position: relative;
  width: 100%;
  height: calc(calc(100 * var(--vh)) + calc(2.8 * var(--vw)));
  min-height: -webkit-fill-available;
  position: relative;
  z-index: 1;
}
.section-homeHeader-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
}
.section-homeHeader-container {
  width: 100%;
  height: 100%;
  display: flex;
  align-items: flex-end;
}
.section-homeHeader-content {
  display: flex;
  align-items: flex-start;
  gap: 1.875rem;
  position: relative;
  z-index: 3;
}
@media screen and (max-width: 720px) {
  .section-homeHeader-content {
    flex-direction: column-reverse;
    gap: 1rem;
  }
}
.section-homeHeader-title {
  display: flex;
  align-items: flex-start;
  color: #DACAB5;
}
.section-homeHeader-titleChar {
  max-width: calc(11.11 * var(--vw));
  margin-left: calc(-1 * var(--vw));
}
.section-homeHeader-titleChar:nth-of-type(3) {
  margin-left: calc(-2.4 * var(--vw));
}
.section-homeHeader-titleShape {
  max-width: calc(22.22 * var(--vw));
  width: clamp(5.2rem, 15.2 * var(--vw), 22.22 * var(--vw));
  margin-left: calc(-2.5 * var(--vw));
  transform: translateY(-6px);
}
@media screen and (max-width: 1200px) {
  .section-homeHeader-titleShape {
    transform: translateY(-4px);
  }
}
@media screen and (max-width: 720px) {
  .section-homeHeader-titleShape {
    transform: translateY(1px);
  }
}
.section-homeHeader-titleShape svg {
  width: 100%;
  height: auto;
}
.section-homeHeader-baseline {
  font-size: clamp(0.875rem, 1.1 * var(--vw), 1rem);
  line-height: 1.375rem;
  text-transform: uppercase;
  color: #DACAB5;
  margin-top: 4px;
  opacity: 0.6;
}
@media screen and (max-width: 720px) {
  .section-homeHeader-baseline {
    line-height: 1rem;
  }
}

.section-projectHeader {
  position: relative;
}
.section-projectHeader.is-vertical .section-projectHeader-bottom {
  width: 100%;
  max-width: 628px;
}
.section-projectHeader.is-vertical .section-projectHeader-cover {
  padding-bottom: 121%;
}
.section-projectHeader.is-horizontal .section-projectHeader-bottom, .section-projectHeader.is-square .section-projectHeader-bottom {
  width: 100%;
  max-width: 840px;
}
.section-projectHeader.is-horizontal .section-projectHeader-cover, .section-projectHeader.is-square .section-projectHeader-cover {
  padding-bottom: 58%;
}
.section-projectHeader-background {
  position: absolute;
  top: 0;
  right: calc(-3 * var(--vw));
}
@media screen and (max-width: 720px) {
  .section-projectHeader-background {
    display: none;
  }
}
.section-projectHeader-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: calc(24 * var(--vh));
}
.section-projectHeader-text {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  position: relative;
  z-index: 3;
}
.section-projectHeader-year {
  font-size: 0.875rem;
  margin-bottom: 0.75rem;
}
.section-projectHeader-title {
  max-width: 875px;
  text-transform: lowercase;
}
.section-projectHeader-bottom {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: calc(-4.5 * var(--vw));
}
@media screen and (max-width: 720px) {
  .section-projectHeader-bottom {
    margin-top: calc(-7 * var(--vw));
  }
}
.section-projectHeader-cover {
  position: relative;
  width: 100%;
  height: 0;
}
.section-projectHeader-tags {
  position: absolute;
  left: 100%;
  bottom: 0;
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
  padding: 0 0 0 3.75rem;
}
@media screen and (max-width: 1200px) {
  .section-projectHeader-tags {
    left: 0;
    padding: 1.5rem 0 0 0;
    top: 100%;
  }
}
.section-projectHeader-tagsItem {
  text-transform: uppercase;
}

.section-nextProject {
  width: 100%;
  height: calc(calc(100 * var(--vh)) + clamp(422px, calc(68 * var(--vh)), 500px));
}
.section-nextProject-container {
  position: sticky;
  top: 0;
  display: flex;
  align-items: flex-end;
  width: 100%;
  height: calc(100 * var(--vh));
}
.section-nextProject-content {
  position: relative;
  width: 100%;
  height: clamp(422px, 68 * var(--vh), 500px);
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #DACAB5;
}
.section-nextProject-scribble {
  position: absolute;
}
.section-nextProject-title {
  display: inline-flex;
  gap: calc(5 * var(--vw));
  position: relative;
  z-index: 3;
}

.section-verticalTextImage {
  padding-bottom: calc(var(--section-padding) * 0.7);
}
@media screen and (max-width: 720px) {
  .section-verticalTextImage {
    padding-bottom: calc(var(--section-padding) * 0.34);
  }
}
.section-verticalTextImage-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.section-verticalTextImage-header {
  margin-bottom: 1.5rem;
}
.section-verticalTextImage-title {
  text-align: center;
  position: relative;
  z-index: 3;
}
.section-verticalTextImage-image {
  position: relative;
  width: 100%;
  max-width: 710px;
  height: 0;
  padding-bottom: 61.5%;
}

.section-fullViewImage {
  width: 100%;
  padding-top: calc(var(--section-padding) * 0.5);
  padding-bottom: calc(var(--section-padding) * 0.5);
}
@media screen and (max-width: 1200px) {
  .section-fullViewImage {
    padding-top: calc(var(--section-padding) * 0.42);
    padding-bottom: calc(var(--section-padding) * 0.42);
  }
}
.section-fullViewImage-container {
  position: relative;
}
.section-fullViewImage-image {
  width: 100%;
  padding-bottom: min(60%, 90vh);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/