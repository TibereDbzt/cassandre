* {
  outline: none;
  box-sizing: border-box;
  -webkit-overflow-scrolling: touch;
}

*, *:before, *:after {
  box-sizing: border-box;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

main {
  display: block;
}

ol, ul, li {
  list-style: none;
}

a {
  color: inherit;
  text-decoration: none;
  cursor: pointer;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  border: none;
}

img {
  display: block;
}

button {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: none;
  cursor: pointer;
}

input {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

select {
  margin: 0;
  -webkit-margin: 0;
  border-radius: 0;
  -webkit-border-radius: 0;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  cursor: pointer;
}

textarea {
  resize: none;
  -webkit-appearance: none;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

strong {
  font-weight: bolder;
}

.section-work__cover, .component-workCard-cover, .component-parallax-image {
  overflow: hidden;
}
.section-work__cover picture, .component-workCard-cover picture, .component-parallax-image picture,
.section-work__cover img,
.component-workCard-cover img,
.component-parallax-image img,
.section-work__cover video,
.component-workCard-cover video,
.component-parallax-image video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: inherit;
}

.is-hidden.component-preloader {
  display: none;
  visibility: hidden;
  opacity: 0;
}

/*
100 thin
200 extralight
300 light
400 normal
500 medium
600 semibold
700 bold
800 extrabold
900 black
*/
@font-face {
  font-family: "PPNeueMontreal Regular";
  src: url(3c7fa6d67cf69fb7dcb4f9eda0fcfc2a.woff2) format("woff2"), url(2842e150d6666a9f53bb8b488bbbb5e7.woff) format("woff"), url(0ffa1ce803437c315ecd147de1a67490.ttf) format("tff"), url(a873dcdf806eccbb729b7787e3739837.otf) format("otf");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "PPNeueMontreal Thin";
  src: url(71394b55e158ca4110f89f23c410fc34.woff2) format("woff2"), url(a09517611973887a927980b0c3400a31.woff) format("woff"), url(e0911f7cc749bf5fe23bc0f1a9961a2b.ttf) format("tff"), url(ef7a4c002e7e12ac2ef9721c379bb512.otf) format("otf");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "RebondGrotesque Extralight";
  src: url(af1f99ab8d12d6666d73b4b77602b545.woff2) format("woff2"), url(a8bd79a8ba892cf593c580f8878884b6.woff) format("woff"), url(961ff838bfbbff9ec00484e49964192f.ttf) format("tff"), url(8b2a1fa20d922e50045143fcc3370be7.otf) format("otf");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
html {
  --vw: 1vw;
  --vh: 1vh;
  position: relative;
  width: 100%;
  min-height: 100%;
  scroll-behavior: initial;
}

body {
  position: relative;
  width: 100%;
  min-height: 100%;
  pointer-events: auto;
  -webkit-overflow-scrolling: touch;
}

.app {
  width: calc(100 * var(--vw));
  min-height: calc(100 * var(--vh));
  background-color: #F5EDE2;
  font-family: "PPNeueMontreal Regular";
  font-size: 16px;
  line-height: 1;
  color: #1C1B1A;
}

.page {
  width: 100%;
  height: 100%;
  min-height: calc(100 * var(--vh));
  padding-top: 140px;
  position: relative;
  z-index: 1;
}

.ui-container, .component-navigation, .page {
  padding-left: 24px;
  padding-right: 24px;
}
@media (min-width: 1280px) {
  .ui-container, .component-navigation, .page {
    padding-left: 4%;
    padding-right: 4%;
  }
}
.ui-container-large {
  padding-left: 24px;
  padding-right: 24px;
}
@media (min-width: 1280px) {
  .ui-container-large {
    padding-left: 12%;
    padding-right: 12%;
  }
}

.ui-h1 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(163px, max(67px, calc(17.1794871795 * var(--vw))));
  line-height: 1.14;
}
@media (min-width: 1280px) {
  .ui-h1 {
    font-size: min(163px, max(67px, calc(11.3194444444 * var(--vw))));
    line-height: 1.14;
  }
}

.ui-h2 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(140px, max(56px, calc(14.358974359 * var(--vw))));
  line-height: 0.9;
}
@media (min-width: 1280px) {
  .ui-h2 {
    font-size: min(140px, max(56px, calc(9.7222222222 * var(--vw))));
    line-height: 0.8;
  }
}

.ui-h3 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(80px, max(48px, calc(12.3076923077 * var(--vw))));
  line-height: 0.93;
}
@media (min-width: 1280px) {
  .ui-h3 {
    font-size: min(80px, max(48px, calc(5.5555555556 * var(--vw))));
    line-height: 0.93;
  }
}

.ui-h4 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(80px, max(48px, calc(12.3076923077 * var(--vw))));
  line-height: 1.14;
}
@media (min-width: 1280px) {
  .ui-h4 {
    font-size: min(80px, max(48px, calc(5.5555555556 * var(--vw))));
    line-height: 0.83;
  }
}

.ui-h5 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(80px, max(48px, calc(12.3076923077 * var(--vw))));
  line-height: 0.9;
}
@media (min-width: 1280px) {
  .ui-h5 {
    font-size: min(80px, max(48px, calc(5.5555555556 * var(--vw))));
    line-height: 0.9;
  }
}

.ui-h6 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(64px, max(40px, calc(10.2564102564 * var(--vw))));
  line-height: 1;
}
@media (min-width: 1280px) {
  .ui-h6 {
    font-size: min(64px, max(40px, calc(4.4444444444 * var(--vw))));
    line-height: 0.95;
  }
}

.ui-h7 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(40px, max(22px, calc(5.641025641 * var(--vw))));
  line-height: 1.05;
}
@media (min-width: 1280px) {
  .ui-h7 {
    font-size: min(40px, max(22px, calc(2.7777777778 * var(--vw))));
    line-height: 0.95;
  }
}

.ui-h8 {
  font-family: "RebondGrotesque Extralight";
  font-size: min(40px, max(22px, calc(5.641025641 * var(--vw))));
  line-height: 1.15;
}
@media (min-width: 1280px) {
  .ui-h8 {
    font-size: min(40px, max(22px, calc(2.7777777778 * var(--vw))));
    line-height: 1.15;
  }
}

.ui-h9, .page-ui-sectionTitle {
  font-family: "RebondGrotesque Extralight";
  font-size: min(32px, max(24px, calc(6.1538461538 * var(--vw))));
  line-height: 0.9;
}
@media (min-width: 1280px) {
  .ui-h9, .page-ui-sectionTitle {
    font-size: min(32px, max(24px, calc(2.2222222222 * var(--vw))));
    line-height: 0.9;
  }
}

.ui-p-xl {
  font-size: min(16px, max(20px, calc(5.1282051282 * var(--vw))));
  line-height: 0.875;
}
@media (min-width: 1280px) {
  .ui-p-xl {
    font-size: min(16px, max(20px, calc(1.1111111111 * var(--vw))));
    line-height: 0.9;
  }
}

.ui-p-l {
  font-size: min(18px, max(16px, calc(4.1025641026 * var(--vw))));
  line-height: 0.9;
}
@media (min-width: 1280px) {
  .ui-p-l {
    font-size: min(18px, max(16px, calc(1.25 * var(--vw))));
    line-height: 0.9;
  }
}

.ui-p-m, .component-circledButton-text {
  font-size: 16px;
  line-height: 1.67;
}

.ui-p-s {
  font-size: 14px;
  line-height: 1.42;
}

.ui-p-xs {
  font-size: 12px;
  line-height: 1.43;
}

.ui-spotLink {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  white-space: pre;
  cursor: pointer;
  position: relative;
  z-index: 1;
}
.ui-spotLink:hover::before {
  transform: scale(1);
}
.ui-spotLink::before {
  content: "";
  position: absolute;
  width: 188%;
  padding-bottom: 188%;
  background: url(396a9a59c45289f07b07d35ca0df1090.png) no-repeat;
  background-size: contain;
  transform: scale(0);
  transition: transform 0.8s cubic-bezier(0.06, 0.645, 0, 0.985);
  z-index: -1;
}

.ui-underlineLink {
  position: relative;
  white-space: pre;
  cursor: pointer;
}
.ui-underlineLink:hover::after {
  transform: translate3d(0, -1px, 0) scaleX(0.97);
}
.ui-underlineLink::after {
  content: "";
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: #1C1B1A;
  transform: translate3d(0, 0, 0);
  transition: transform 1s cubic-bezier(0.06, 0.645, 0, 0.985);
}

.ui-cursorTextLink {
  cursor: pointer;
  position: relative;
  z-index: 1;
}

.ui-wordMask {
  position: relative;
  overflow: hidden;
}
.ui-wordMask > span {
  display: block;
}
.ui-wordMask > span:nth-child(2) {
  position: absolute;
  top: 100%;
  left: 0;
}

.page-ui-section {
  padding: 64px 0;
}
.page-ui-sectionTitle {
  margin-bottom: 32px;
}
.page-ui-colors {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 24px 4%;
}
.page-ui-colorsItem {
  padding-bottom: 100%;
}
.page-ui-colorsItem.is-black {
  background-color: #1C1B1A;
}
.page-ui-colorsItem.is-dark-black {
  background-color: #141313;
}
.page-ui-colorsItem.is-grey {
  background-color: #ABB0B4;
}
.page-ui-colorsItem.is-white {
  background-color: #FFFFFF;
}
.page-ui-colorsItem.is-brown {
  background-color: #DACAB5;
}
.page-ui-colorsItem.is-beige-light {
  background-color: #F9F4ED;
}
.page-ui-colorsItem.is-blue-light {
  background-color: #CCDCF7;
}
.page-ui-colorsItem.is-blue {
  background-color: #4185F4;
}
.page-ui-colorsItem.is-green {
  background-color: #E6FFF5;
}
.page-ui-colorsItem.is-pink {
  background-color: #F5DADA;
}
.page-ui-colorsItem.is-orange {
  background-color: #FF6C3C;
}
.page-ui-cursor {
  display: flex;
  justify-content: space-between;
}
.page-ui-cursorLink {
  width: 100px;
  height: 30px;
  background-color: #DACAB5;
}
.page-ui-cursorSlider {
  width: 100px;
  height: 30px;
  background-color: #CCDCF7;
}
.page-ui-textLinks {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;
  gap: 8px;
}
.page-ui-parallaxImage {
  display: inline-block;
  width: 500px;
  height: 300px;
}
.page-ui-cards {
  display: flex;
  flex-wrap: wrap;
  gap: 48px;
}

.page-home {
  background-color: #1C1B1A;
}
.page-home-projectsButton {
  display: flex;
  justify-content: center;
  margin-bottom: 140px;
}

.component-circledButton {
  position: relative;
  min-height: 152px;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
.component-circledButton:hover .component-circledButton-text {
  transform: translate3d(-18px, 0, 0);
}
.component-circledButton:hover .component-circledButton-arrow {
  animation-name: arrow-slide;
}
.component-circledButton:hover .component-circledButton-circle {
  transform: rotate(3deg) scaleX(0.97);
}
.component-circledButton:hover .component-circledButton-circle:nth-of-type(2) {
  transform: rotate(-2deg) scaleX(0.97);
}
.component-circledButton-content {
  display: flex;
  align-items: center;
  position: relative;
}
.component-circledButton-text {
  color: #DACAB5;
  text-transform: uppercase;
  padding: 0 14px;
  transition: transform 1s cubic-bezier(0.11, 0.9, 0.09, 1);
}
.component-circledButton-arrow {
  position: absolute;
  animation: 0.6s forwards cubic-bezier(0.11, 0.9, 0.09, 1);
  animation-name: arrow-slide-reverse;
}
.component-circledButton-circle {
  position: absolute;
  transition: transform 1s cubic-bezier(0.11, 0.9, 0.09, 1);
}
.component-circledButton-circle:nth-of-type(2) {
  transform: rotate(4deg);
}
.component-circledButton-circle path {
  stroke: #686158;
}

@keyframes arrow-slide {
  0% {
    left: -18px;
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    left: calc(100% - 18px);
    opacity: 1;
  }
}
@keyframes arrow-slide-reverse {
  0% {
    left: 100%;
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    left: -18px;
    opacity: 1;
  }
}
.component-cursor {
  --translateX: 0px;
  --translateY: 0px;
  --skewX: 0deg;
  --skewY: 0deg;
  position: fixed;
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  pointer-events: none;
  position: fixed;
  z-index: 5;
}
.component-cursor.is-down.on-slider .component-cursor-backgroundContainer {
  transform: scale(0.8);
}
.component-cursor.is-down.on-slider .component-cursor-contentContainer {
  transform: scaleX(1.1);
}
.component-cursor.is-down.on-link .component-cursor-backgroundContainer {
  transform: scale(0.8);
}
.component-cursor.is-down.on-link .component-cursor-contentContainer {
  transform: scaleX(1.2) translate3d(-5px, -5px, 0) rotate(15deg);
}
.component-cursor.is-white .component-cursor-background {
  background-image: url(ab3c697c2e0e01f460441dec41b9671a.png);
}
.component-cursor.is-white .component-cursor-arrow svg path {
  stroke: #141313;
}
.component-cursor.is-white .component-cursor-background {
  background-image: url(396a9a59c45289f07b07d35ca0df1090.png);
}
.component-cursor.on-link .component-cursor-inner {
  transform: scale(1) rotate(-40deg);
}
.component-cursor.on-slider .component-cursor-inner {
  transform: scale(1) rotate(0deg);
}
.component-cursor.on-slider .component-cursor-background {
  transform: scale(1.2);
}
.component-cursor.on-slider .component-cursor-arrow.is-left {
  opacity: 1;
  transform: translate3d(-40%, 0, 0);
}
.component-cursor.on-slider .component-cursor-arrow.is-right {
  transform: translate3d(40%, 0, 0);
}
.component-cursor-wrapper {
  display: inline-block;
  transform: translate3d(var(--translateX), var(--translateY), 0) skewX(var(--skewX)) skewY(var(--skewX));
  transition: transform cubic-bezier(0.11, 0.9, 0.09, 1) 0.8s;
}
.component-cursor-inner {
  position: relative;
  width: 112px;
  height: 112px;
  display: flex;
  justify-content: center;
  align-items: center;
  transform: scale(0);
  transition: transform 0.7s cubic-bezier(0.11, 0.9, 0.09, 1);
}
.component-cursor-backgroundContainer {
  position: absolute;
  width: 100%;
  height: 100%;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.component-cursor-background {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(becba5e4a460ffafbe38614447753500.png);
  background-size: contain;
  background-repeat: no-repeat;
  transition: transform 0.4s cubic-bezier(0.18, 0.64, 0.21, 0.97);
}
.component-cursor-contentContainer {
  position: absolute;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
  transform-origin: left bottom;
}
.component-cursor-content {
  display: flex;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.component-cursor-arrow {
  width: 23px;
  height: 21px;
  transition: 1s cubic-bezier(0.06, 0.645, 0, 0.985);
  transition-property: opacity, transform;
}
.component-cursor-arrow.is-left {
  opacity: 0;
  transform: translate3d(50%, 0, 0);
}
.component-cursor-arrow.is-right {
  transform: translate3d(-50%, 0, 0);
}
.component-cursor-arrow svg path {
  stroke: #FFFFFF;
  transition: stroke 0.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}

.component-footer {
  position: relative;
  width: calc(100% + 48px);
  margin-left: -24px;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #1C1B1A;
  background-color: #F5EDE2;
  position: relative;
  z-index: 1;
}
@media (min-width: 1280px) {
  .component-footer {
    width: 108%;
    margin-left: -4%;
  }
}
.component-footer-spacer {
  width: 100%;
  height: 128px;
}
.component-footer-overlay {
  position: absolute;
  top: 0;
  width: 112%;
  height: 370px;
  border-radius: 100%;
}
.component-footer-wrapper {
  width: 100%;
  padding-top: 60px;
  background-color: #F5EDE2;
}
@media (min-width: 1280px) {
  .component-footer-wrapper {
    padding-top: 100px;
  }
}
@media (min-width: 1280px) {
  .component-footer-top {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
  }
}
.component-footer-title {
  letter-spacing: -2px;
  max-width: 192px;
  margin-bottom: 24px;
}
@media (min-width: 1280px) {
  .component-footer-title {
    max-width: 345px;
  }
}
.component-footer-paragraph {
  max-width: 290px;
  padding-bottom: 42px;
  line-height: 1.42;
}
@media (min-width: 1280px) {
  .component-footer-paragraph {
    max-width: 405px;
  }
}
.component-footer-divider {
  width: 100%;
  height: 1px;
  background-color: #1C1B1A;
  margin-top: 77px;
}
.component-footer-bottom {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: flex-end;
  padding: 24px 0;
}
@media (min-width: 1280px) {
  .component-footer-bottom {
    flex-direction: row;
    align-items: center;
    padding: 56px 0;
  }
}
.component-footer-social-list {
  width: 100%;
  display: flex;
  justify-content: space-between;
  gap: 40px;
}
@media (min-width: 1280px) {
  .component-footer-social-list {
    width: auto;
  }
}
.component-footer-social-link {
  text-transform: uppercase;
}
.component-footer-signature {
  position: relative;
  display: flex;
  align-items: center;
  margin-top: 60px;
}
@media (min-width: 1280px) {
  .component-footer-signature {
    margin-top: 0;
  }
}
.component-footer-signature-link {
  font-family: "RebondGrotesque Extralight";
  position: relative;
  z-index: 3;
}
.component-footer-signature-figure {
  position: absolute;
  left: -28px;
}
@media (min-width: 1280px) {
  .component-footer-signature-figure {
    left: -64px;
  }
}
.component-footer-signature-figure svg {
  width: 37px;
}
@media (min-width: 1280px) {
  .component-footer-signature-figure svg {
    width: 82px;
  }
}

.component-navigation {
  top: 0;
  left: 0;
  width: 100%;
  position: fixed;
  z-index: 2;
}
.component-navigation.of-dark-page .component-navigation-entryFigure path {
  stroke: #F5EDE2;
}
.component-navigation.of-dark-page .component-navigation-entry {
  color: #F5EDE2;
}
.component-navigation.of-dark-page .component-navigation-entry path {
  stroke: #F5EDE2;
}
.component-navigation-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 50px 0;
}
@media (min-width: 1280px) {
  .component-navigation-wrapper {
    padding: 34px 0;
  }
}
.component-navigation-entryFigure path {
  stroke: #1C1B1A;
}
.component-navigation-entries {
  display: flex;
  align-items: center;
  gap: 24px;
}
@media (min-width: 1280px) {
  .component-navigation-entries {
    gap: 40px;
  }
}
.component-navigation-entry {
  color: #1C1B1A;
  text-transform: uppercase;
}
.component-navigation-entry path {
  stroke: #1C1B1A;
}

.component-preloader {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: fixed;
  z-index: 4;
}
.component-preloader-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #1C1B1A;
}
.component-preloader-wrapper.is-blackDark {
  background-color: #141313;
}
.component-preloader-logo {
  display: flex;
  justify-content: center;
  align-items: center;
}
.component-preloader-logoFrame {
  position: absolute;
  width: 35%;
}
@media (min-width: 1280px) {
  .component-preloader-logoFrame {
    width: 12%;
  }
}
.component-preloader-name {
  position: absolute;
  display: flex;
  align-items: center;
}
.component-preloader-nameWord {
  color: #F5EDE2;
  text-transform: uppercase;
}
.component-preloader-nameCarret {
  position: absolute;
  top: 0;
  right: -6px;
  width: 2px;
  height: 100%;
  background-color: #F5EDE2;
  animation: flash 0.75s infinite reverse;
}
.component-preloader-nameFigure {
  position: absolute;
  right: 0;
  width: 65%;
}
.component-preloader-nameFigure svg {
  width: 100%;
}
.component-preloader-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@keyframes flash {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  51% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}
.component-scribbleLink {
  position: relative;
  display: inline-flex;
  justify-content: center;
  white-space: pre;
}
.component-scribbleLink-scribble {
  position: absolute;
  top: 90%;
  width: 120%;
}

.component-parallax {
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.component-parallax-image {
  width: 100%;
  height: 100%;
}

.component-workCard {
  display: inline-block;
}
.component-workCard.is-hidden {
  pointer-events: none;
  transition-duration: 0s;
  transition-delay: 0s;
}
.component-workCard.is-hidden * {
  pointer-events: none;
  transition-duration: 0s;
  transition-delay: 0s;
}
.component-workCard.is-hidden .component-workCard-cover {
  clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
}
.component-workCard.is-hidden .component-workCard-coverImage {
  transform: scale(1.2) translate3d(0, 100px, 0);
}
.component-workCard.is-hidden .component-workCard-content {
  transform: rotate(8deg);
}
.component-workCard.is-hidden .component-workCard-nameInner {
  transform: translate3d(0, 100%, 0) scaleY(2);
}
.component-workCard.is-hidden .component-workCard-separator {
  transform: scaleX(0);
}
.component-workCard.is-hidden .component-workCard-excerpt, .component-workCard.is-hidden .component-workCard-date {
  opacity: 0;
  transform: translate3d(0, 16px, 0);
}
.component-workCard:hover {
  transition-delay: 0s !important;
}
.component-workCard:hover * {
  transition-delay: 0s !important;
}
.component-workCard:hover .component-workCard-cover {
  width: 350px;
}
@media (min-width: 1280px) {
  .component-workCard:hover .component-workCard-cover {
    width: 523px;
  }
}
.component-workCard:hover .component-workCard-coverImage {
  transform: scale(1.3);
}
.component-workCard-wrapper {
  display: inline-block;
}
.component-workCard-cover {
  width: 340px;
  height: 334px;
  clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  transition: width 0.7s cubic-bezier(0.06, 0.645, 0, 0.985), clip-path 1.1s cubic-bezier(0.075, 0.93, 0.055, 0.99);
}
@media (min-width: 1280px) {
  .component-workCard-cover {
    width: 507px;
    height: 401px;
  }
}
.component-workCard-coverImage {
  transition: transform 1.6s cubic-bezier(0.06, 0.645, 0, 0.985);
  will-change: transform;
}
.component-workCard-content {
  margin-top: 24px;
  transform-origin: left;
  transition: transform 2s cubic-bezier(0.09, 0.94, 0, 0.99);
}
@media (min-width: 1280px) {
  .component-workCard-content {
    margin-top: 40px;
  }
}
.component-workCard-nameInner {
  transition: transform 1.4s cubic-bezier(0.06, 0.645, 0, 0.985);
  transition-delay: 0.4s;
}
.component-workCard-separator {
  width: 100%;
  height: 1px;
  background-color: #1C1B1A;
  margin: 24px 0;
  transform-origin: left;
  transition: transform 1.4s cubic-bezier(0.06, 0.645, 0, 0.985);
  transition-delay: 0.7s;
}
.component-workCard-details {
  display: flex;
  justify-content: space-between;
}
.component-workCard-excerpt {
  transition: 1.7s cubic-bezier(0.13, 0.85, 0.33, 0.99);
  transition-property: transform, opacity;
  transition-delay: 0.8s;
}
.component-workCard-date {
  transition: 2.2s cubic-bezier(0.13, 0.85, 0.33, 0.99);
  transition-property: transform, opacity;
  transition-delay: 0.8s;
}

.section-work {
  padding: 60px 0;
  position: relative;
  z-index: 2;
}
@media (min-width: 1280px) {
  .section-work {
    padding: 116px 0;
  }
}
.section-work.is-visible .section-work__link:hover .section-work__cover {
  transform: scale(0.95);
}
.section-work.is-visible .section-work__link:hover .section-work__cover-inner .component-parallax {
  transform: scale(1.1);
}
.section-work.is-visible .section-work__link:active .section-work__cover {
  transform: scale(0.93);
}
.section-work.is-visible .section-work__link:active .section-work__cover-inner .component-parallax {
  transform: scale(1.2);
}
@media (min-width: 1280px) {
  .section-work:nth-of-type(3n+1) .section-work__cover {
    width: 735px;
    height: 450px;
  }
}
.section-work:nth-of-type(3n+1) .section-work__scribble {
  top: 93%;
  left: 4%;
}
.section-work:nth-of-type(3n+1) .section-work__text {
  left: 97%;
}
.section-work:nth-of-type(3n+2) .section-work__container {
  justify-content: center;
  margin-right: 140px;
}
@media (min-width: 1280px) {
  .section-work:nth-of-type(3n+2) .section-work__cover {
    width: 720px;
    height: 440px;
  }
}
.section-work:nth-of-type(3n+2) .section-work__scribble {
  top: -10%;
  left: 90%;
}
.section-work:nth-of-type(3n+2) .section-work__text {
  right: 98%;
}
.section-work:nth-of-type(3n+2) .section-work__header {
  flex-direction: row-reverse;
}
.section-work:nth-of-type(3n+2) .section-work__index {
  margin: 4px 16px 0 0;
}
.section-work:nth-of-type(3n+3) .section-work__container {
  justify-content: center;
}
.section-work:nth-of-type(3n+3) .section-work__text {
  width: 480px;
  left: 97%;
}
@media (min-width: 1280px) {
  .section-work:nth-of-type(3n+3) .section-work__cover {
    width: 382px;
    height: 540px;
  }
}
.section-work:nth-of-type(3n+3) .section-work__scribble {
  right: 76%;
  bottom: 6%;
}
.section-work.is-beige__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #F5EDE2;
}
.section-work.is-lightblue .section-work__cover-overlay {
  background-color: #CCDCF7;
}
.section-work.is-blue__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #4185F4;
}
.section-work.is-green__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #E6FFF5;
}
.section-work.is-pink__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #F5DADA;
}
.section-work.is-orange__cover-overlay, .section-work .section-work__cover-overlay {
  background-color: #FF6C3C;
}
.section-work.is-visible .section-work__cover {
  clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
}
.section-work.is-visible .section-work__cover-inner {
  transform: translate3d(0, 0, 0);
}
.section-work.is-visible .section-work__cover-overlay {
  clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
}
.section-work__container {
  position: relative;
  display: flex;
  flex-direction: column;
}
@media (min-width: 1280px) {
  .section-work__container {
    flex-direction: row;
  }
}
.section-work__link {
  position: relative;
  display: flex;
  align-items: center;
}
.section-work__cover {
  position: relative;
  clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
  transition: clip-path 0.7s cubic-bezier(0.06, 0.645, 0, 0.985), transform 0.9s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.section-work__cover-inner {
  width: 100%;
  height: 100%;
  overflow: hidden;
  transform: translate3d(-40px, 0, 0);
  transition: transform 1.8s cubic-bezier(0.06, 0.645, 0, 0.985) 0.4s;
}
.section-work__cover-inner .component-parallax {
  transition: transform 0.9s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.section-work__cover-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
  transition: clip-path 1.4s cubic-bezier(0.06, 0.645, 0, 0.985) 0.4s;
}
.section-work__text {
  position: relative;
  z-index: 2;
}
@media (min-width: 1280px) {
  .section-work__text {
    position: absolute;
  }
}
.section-work__header {
  display: flex;
  align-items: flex-start;
}
.section-work__name {
  color: #F5EDE2;
  text-transform: lowercase;
}
.section-work__index {
  font-family: "RebondGrotesque Extralight";
  color: #F5EDE2;
  margin: 12px 0 0 16px;
}
.section-work__tags {
  margin: 32px 0 0 122px;
}
.section-work__tag-item {
  font-family: "PPNeueMontreal Regular";
  color: #F5EDE2;
  text-transform: uppercase;
  margin-top: 4px;
}
.section-work__tag-item:first-of-type {
  margin-top: 0;
}
.section-work__scribble {
  position: absolute;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/